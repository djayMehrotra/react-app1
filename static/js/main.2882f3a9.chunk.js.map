{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.comoponent.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","item","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAAe,I,kBCgBAA,EAbF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,KACnE,mCAAML,EAAMG,QAAQG,KAApB,OACA,qCAAQN,EAAMG,QAAQI,MAAtB,WCJCC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KACZ,SAAAC,GAAI,OACA,cAAC,EAAD,CAAoBR,QAASQ,GAAlBA,EAAKP,WCHvBQ,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBACEC,KAAK,SACLd,UAAU,SACVY,YAAaA,EACbG,SAAUF,MCwCLG,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,QAAQ,WAAKC,QAAQC,IAAI,EAAKC,WAhBpE,EAAKA,MAAQ,CACXhB,SAAU,GACVW,YAAa,IALH,E,qDASd,WACC,IAAD,OACEM,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GACJ,EAAKX,SAAS,CAAEV,SAAUqB,S,oBAQ9B,WACE,MAAiCC,KAAKN,MAA9BhB,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZY,EAAmBvB,EAASwB,QAAO,SAAA9B,GAAO,OAC5CA,EAAQG,KAAK4B,cAAcC,SAASf,EAAYc,kBAGpD,OACE,sBAAKjC,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEY,YAAY,iBACZC,aAAeiB,KAAKjB,eACtB,cAAC,EAAD,CAAUL,SAAUuB,W,GAnCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2882f3a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.style.css';\r\n\r\nconst Card = (props) => {\r\n    return ( \r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"\" />\r\n            <h2> {props.monster.name} </h2>\r\n            <span> {props.monster.email} </span>\r\n        </div>\r\n     );\r\n}\r\n /* \r\n    this is a repeated component\r\n    hence there is no map available and it is called repeatedly\r\n */\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from '../card/card.component';\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = (props) => {\r\n    return ( \r\n        <div className='card-list'>\r\n            {props.monsters.map(\r\n                item => (\r\n                    <Card key={item.id} monster={item}/>  \r\n                    /* \r\n                       can be anytype of data - mon/fry is passed to the single comp card\r\n                       card list will be one single type of comp holding card  \r\n                    */\r\n                )\r\n            )}\r\n        </div>\r\n     );\r\n}","import React from 'react';\r\nimport './search.style.css';\r\n\r\n/* \r\n   class is not used, no internal state or life cycle method in a class component \r\n*/\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return ( \r\n        <input\r\n          type=\"search\"\r\n          className='search' \r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n        />\r\n     );\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport { CardList } from './components/card-list/card-list.comoponent';\r\nimport { SearchBox } from './components/search/search.component';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: '' \r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then( response => response.json())\r\n    .then(users=>{\r\n      this.setState({ monsters: users });\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({searchField : e.target.value}, ()=>{console.log(this.state)}) \r\n  }\r\n\r\n  render(){\r\n    const { monsters, searchField} = this.state;\r\n    const filteredMonsters = monsters.filter(monster => \r\n        monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n      );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Monsters Rolodexx</h1>  \r\n        <SearchBox\r\n          placeholder=\"Search Monster\"\r\n          handleChange={ this.handleChange } />\r\n        <CardList monsters={filteredMonsters} /> \r\n        {/* \r\n          -earlier the mapping was involved here and that is move to the component\r\n          -the state is passed as an attribute to the component( which is props)\r\n          -filteredd mosnters is passed\r\n        */}\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}